---

# Deploy the application
- name: Deploy Dockerized application
  hosts: webserver
  become: yes
  environment:
    ANSIBLE_HOST_KEY_CHECKING: "false"

  vars:
    # Deployment path
    deployment_path: /home/christabel-todo

  tasks:
    - name: Remove old Docker repository configuration (if exists)
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

    - name: Add Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'

    - name: Configure Docker APT repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu jammy stable\n"
        mode: '0644'

    - name: Create deployment directory
      ansible.builtin.file:
        path: "{{ deployment_path }}"
        state: directory
        mode: "0755"

    - name: Copy docker-run.yml to remote server
      ansible.builtin.copy:
        src: ../docker-run.yml
        dest: "{{ deployment_path }}/docker-run.yml"
        mode: "0644"

    - name: Copy docker-compose.yml to remote server
      ansible.builtin.copy:
        src: ../docker-compose.yml
        dest: "{{ deployment_path }}/docker-compose.yml"
        mode: "0644"

    - name: Copy nginx.Dockerfile to remote server
      ansible.builtin.copy:
        src: ../nginx.Dockerfile
        dest: "{{ deployment_path }}/nginx.Dockerfile"
        mode: "0644"

    - name: Copy nginx.conf to remote server
      ansible.builtin.copy:
        src: ../nginx.conf
        dest: "{{ deployment_path }}/nginx.conf"
        mode: "0644"

    - name: Copy Dockerfile to remote server
      ansible.builtin.copy:
        src: ../Dockerfile
        dest: "{{ deployment_path }}/Dockerfile"
        mode: "0644"

    - name: Create the nginx configuration directory
      ansible.builtin.file:
        path: "{{ deployment_path }}/nginx"
        state: directory
        mode: "0755"

    - name: Copy nginx configuration
      ansible.builtin.copy:
        src: ../nginx.conf
        dest: "{{ deployment_path }}/nginx/nginx.conf"
        mode: "0644"

    - name: Pull the latest Docker images
      command: docker-compose pull
      args:
        chdir: "{{ deployment_path }}"
      register: pull_result
      changed_when: "'Downloaded newer image' in pull_result.stdout"
      failed_when: pull_result.rc != 0

    - name: Bring down old containers (if any)
      command: docker-compose down
      args:
        chdir: "{{ deployment_path }}"
      register: down_result
      ignore_errors: yes 
      failed_when: down_result.rc != 0


    - name: Start the application with Docker Compose
      command: docker-compose -f docker-run.yml up -d --remove-orphans
      args:
        chdir: "{{ deployment_path }}"
      register: compose_result
      failed_when: compose_result.rc != 0
